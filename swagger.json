{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.0",
        "title": "GoIT Car Rental App",
        "description": "Single-user app for car rental",
        "license": {
            "name": "GNU GENERAL PUBLIC LICENSE",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://goit-car-rental.onrender.com/api/"
        }
    ],
    "tags": [
        {
            "name": "Adverts",
            "description": "Vehicles catalog endpoints"
        },
        {
            "name": "Filters",
            "description": "Vehicles filter endpoints"
        },
        {
            "name": "Favorites",
            "description": "Favorite vehicles endpoints"
        }
       
    ],
    "paths": {
        "/adverts": {
            "get": {
                "tags": [
                    "Adverts"
                ],
                "summary": "Filtered adverts list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "make",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filters by vehicle brand. If not defined - shows all"
                    },
                    {
                        "in": "query",
                        "name": "rentalPrice",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filters by max allowed rental price. If not defined - shows all"
                    },
                    {
                        "in": "query",
                        "name": "mileageFrom",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filters by min mileage. If not defined - shows all"
                    },
                    {
                        "in": "query",
                        "name": "mileageTo",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Filters by max mileage. If not defined - shows all"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "description": "Pagination page (12 items per page). If not defined - shows 1st page."
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error in request parameters"
                    }
                }
            }
        },
        "/filters": {
            "get": {
                "tags": [
                    "Filters"
                ],
                "summary": "Parameters to construct filters",
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FiltersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Favorite vehicles list",

                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoritesListResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Adding vehicle to favorites list",
                "requestBody": {
                    "description": "Favorite object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddFavoriteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/favorites/{id}": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Removing vehicle from favorites list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Vehicle id to remove"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FavoriteResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "VerificationRequest": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                        "example": "anakin@deathstar.com"
                    }
                }
            },
            "PasswordRestoreRequest": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "required": true,
                        "description": "User's email",
                        "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                        "example": "anakin@deathstar.com"
                    }
                }
            },
            "PasswordRestoreResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Restore token"
                    }
                }
            },
            "UpdatePasswordRequest": {
                "type": "object",
                "required": [
                    "token",
                    "password"
                ],
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Restore token"
                    },
                    "password": {
                        "type": "string",
                        "description": "New password",
                        "minLength": 6,
                        "maxLength": 24
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "required": true,
                        "description": "User's email",
                        "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                        "example": "anakin@deathstar.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "New password",
                        "minLength": 6,
                        "maxLength": 24
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "required": true,
                        "description": "User's authentitication token"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's display name",
                                "example": "Darth Vader"
                            },
                            "email": {
                                "type": "string",
                                "required": true,
                                "description": "User's email",
                                "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                                "example": "anakin@deathstar.com"
                            },
                            "aratarURL": {
                                "type": "string",
                                "description": "User's avatar",
                                "format": "uri"
                            },
                            "createdAt": {
                                "type":"string",
                                "description": "Date of creation",
                                "format": "date"
                            }
                        }
                    }
                }
            },
            "CurrentUserResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's display name",
                        "example": "Darth Vader"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "description": "User's email",
                        "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                        "example": "anakin@deathstar.com"
                    },
                    "aratarURL": {
                        "type": "string",
                        "description": "User's avatar",
                        "format": "uri"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "date"
                    }
                }
            },
            "ProductsResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "description": "Total count of elements in filtered collection",
                        "items": {
                            "type": "object",
                            "properties": {
                                "groupBloodNotAllowed": {
                                    "type": "object",
                                    "properties": {
                                        "1": {
                                            "type": "boolean"
                                        },
                                        "2": {
                                            "type": "boolean"
                                        },
                                        "3": {
                                            "type": "boolean"
                                        },
                                        "4": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "_id": {
                                    "type": "string"
                                },
                                "weight": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "calories": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "category": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "ProductCategoriesResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "DiariesResponse": {
                "type": "object",
                "properties": {
                    "workouts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkoutResponse"
                        }
                    },
                    "meals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MealResponse"
                        }
                    }
                }
            },
            "WorkoutResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "time": {
                        "type": "number"
                    },
                    "burnedCalories": {
                        "type": "number"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "exercise_id": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "bodyPart": {
                                "type": "string"
                            },
                            "equipment": {
                                "type": "string"
                            },
                            "gifUrl": {
                                "type": "string",
                                "format": "uri"
                            },
                            "name": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "burnedCalories": {
                                "type": "integer"
                            },
                            "time": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "WorkoutsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkoutResponse"
                }
            },
            "MealResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "calories": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "product_id": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string",
                                "description": "Product category Id"
                            },
                            "weight": {
                                "type": "integer"
                            },
                            "calories": {
                                "type": "integer"
                            },
                            "title": {
                                "type": "string"
                            },
                            "groupBloodNotAllowed": {
                                "type": "object",
                                "properties": {
                                    "1": {
                                        "type": "boolean"
                                    },
                                    "2": {
                                        "type": "boolean"
                                    },
                                    "3": {
                                        "type": "boolean"
                                    },
                                    "4": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "MealsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/MealResponse"
                }
            },
            "AddMealRequest": {
                "type": "object",
                "required": [
                    "product_id",
                    "weight",
                    "date"
                ],
                "properties": {
                    "product_id": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Actual product weight",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 700
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "UpdateMealRequest": {
                "type": "object",
                "required": [
                    "_id",
                    "weight"
                ],
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Meal record Id"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Actual product weight",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 700
                    }
                }
            },
            "AddWorkoutRequest": {
                "type": "object",
                "required": [
                    "product_id",
                    "weight",
                    "date"
                ],
                "properties": {
                    "exercise_id": {
                        "type": "string"
                    },
                    "time": {
                        "type": "number",
                        "description": "Actual exercise duration",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 120
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "UpdateWorkoutRequest": {
                "type": "object",
                "required": [
                    "_id",
                    "time"
                ],
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Workout record Id"
                    },
                    "time": {
                        "type": "integer",
                        "description": "Actual exercise duration",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 120
                    }
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's display name"
                    }
                }
            },
            "UpdateUserResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's display name",
                        "example": "Darth Vader"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "description": "User's email",
                        "pattern": "/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/",
                        "example": "anakin@deathstar.com"
                    },
                    "aratarURL": {
                        "type": "string",
                        "description": "User's avatar",
                        "format": "uri"
                    }
                }
            },
            "UpdateUserAvatarRequest": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "UpdateUserAvatarResponse": {
                "type": "object",
                "properties": {
                    "avatarURL": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "UserSportProfileRequest": {
                "type": "object",
                "required": [
                    "height",
                    "currentWeight",
                    "desiredWeight",
                    "sex",
                    "blood",
                    "levelActivity",
                    "birthday"
                ],
                "properties": {
                    "height": {
                        "type": "integer",
                        "description": "User's height",
                        "minimum": 150,
                        "maximum": 250
                    },
                    "currentWeight": {
                        "type": "integer",
                        "description": "User's weight",
                        "minimum": 35,
                        "maximum": 250
                    },
                    "desiredWeight": {
                        "type": "integer",
                        "description": "User's target weihgt",
                        "minimum": 35,
                        "maximum": 200
                    },
                    "sex": {
                        "type": "string",
                        "description": "User's gender",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "blood": {
                        "type": "integer",
                        "description": "User's blood type",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    "levelActivity": {
                        "type": "integer",
                        "description": "User's blood type",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User's birthday",
                        "format": "date"
                    }
                }
            },
            "UserSportProfileResponse": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "height": {
                                "type": "integer",
                                "description": "User's height"
                            },
                            "currentWeight": {
                                "type": "integer",
                                "description": "User's weight"
                            },
                            "desiredWeight": {
                                "type": "integer",
                                "description": "User's target weihgt"
                            },
                            "sex": {
                                "type": "string",
                                "description": "User's gender",
                                "enum": [
                                    "male",
                                    "female"
                                ]
                            },
                            "blood": {
                                "type": "integer",
                                "description": "User's blood type",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4
                                ]
                            },
                            "levelActivity": {
                                "type": "integer",
                                "description": "User's blood type",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                ]
                            },
                            "birthday": {
                                "type": "string",
                                "description": "User's birthday",
                                "format": "date"
                            },
                            "owner": {
                                "type": "object",
                                "$ref": "#/components/schemas/UpdateUserResponse"
                            }
                        }
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "UserTargetsResponse": {
                "type": "object",
                "properties": {
                    "targetBmr": {
                        "type": "number",
                        "description": "User's target BMR"
                    },
                    "targetTime": {
                        "type": "number",
                        "description": "User's target traning time"
                    }
                }
            },
            "ExercisesResponse": {
                "type": "object",
                "description": "Total count of elements in filtered collection",
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "bodyPart": {
                                    "type": "string"
                                },
                                "equipment": {
                                    "type": "string"
                                },
                                "gifUrl": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "target": {
                                    "type": "string"
                                },
                                "burnedCalories": {
                                    "type": "integer"
                                },
                                "time": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "ExercisesCategoriesResponse": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "object",
                        "description": "Categories filter endpoints",
                        "properties": {
                            "filter": {
                                "type": "string",
                                "description": "Category filter group"
                            },
                            "field": {
                                "type": "string",
                                "description": "Types field by category filter"
                            }
                        }
                    }
                }
            },
            "BasicStatisticResponse": {
                "type": "object",
                "properties": {
                    "userCount": {
                        "type": "integer"
                    },
                    "workoutCount": {
                        "type": "integer"
                    },
                    "burnedCaloriesSum": {
                        "type": "number"
                    },
                    "workoutsTimeSum": {
                        "type": "number"
                    }
                }
            }
        }
    }
}